name: Update Snapshot Tests

on:
  workflow_dispatch:
    inputs:
      target-branch:
        description: 'Run workflow on the following branch'
        required: true

jobs:
  update_outputs:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]

    steps:

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.target-branch }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Check if branch exists
        run: |
          BRANCH="${{ github.event.inputs.target-branch }}"
          echo "üîç Checking if branch '$BRANCH' exists on origin..."
          
          if git ls-remote --exit-code origin "$BRANCH"; then
            echo "‚úÖ Branch '$BRANCH' exists on origin."
          else
            echo "‚ùå ERROR: Branch '$BRANCH' does not exist on origin."
            exit 1
          fi

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv
          installer-parallel: true

      - name: Install dependencies
        run: |
          poetry install --no-root
          source .venv/bin/activate

      - name: Run snapshot tests to update outputs
        run: |
          poetry run inv run-snapshot-test -t update

      - name: Commit updated snapshots
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -u
          git diff --cached --quiet || git commit -m "Update snapshot expected outputs"
          git push origin ${{ github.event.inputs.target-branch }}
